{"version":3,"sources":["app.ts","environment.ts","main.ts","models/image.ts","resources/index.ts","services/data-service.ts","components/data/data.ts","components/form/form.ts","components/hello/hello.ts","components/spinner/spinner.ts","views/form-view/form-view.ts","views/hello-view/hello-view.ts","views/home-view/home-view.ts","views/data-view/data-view.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration, Router} from 'aurelia-router';\n\nexport class App { \n\n  message = 'Aurelia demo';\n\n  private router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router): void { \n    config.title = 'Aurelia'; \n    config.map([ \n      { route: ['', 'home'], name: 'home', moduleId: 'views/home-view/home-view', title: 'Home', nav: true }, \n      { route: 'hello', name: 'hello', moduleId: 'views/hello-view/hello-view', nav: true, title: 'Hello' }, \n      { route: 'data', name: 'data', moduleId: 'views/data-view/data-view', nav: true, title: 'Data' }, \n      { route: 'form', name: 'form', moduleId: 'views/form-view/form-view', nav: true, title: 'Form' }, \n      //{ route: 'users/:id/detail', name: 'userDetail', moduleId: 'users/detail' }, \n    ]); \n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-router')\n    .plugin('aurelia-validation');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Image {\r\n    caption: string;\r\n    url: string;\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json, RequestInit } from 'aurelia-fetch-client';\r\n\r\nimport environment from '../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataService {\r\n\r\n\r\n    constructor(private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    loadData(url: string) {\r\n        let headers: Headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.httpClient.fetch(url, {\r\n            credentials: 'omit', // include\r\n            headers: headers\r\n        })\r\n            .then(response => {\r\n                return this.handleResponse(response);\r\n            });\r\n    }\r\n\r\n    postData(url: string, data: any) {\r\n        let headers: Headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.httpClient.fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            credentials: 'include',\r\n            headers: headers\r\n        })\r\n            .then(response => {\r\n                return this.handleResponse(response);\r\n            });\r\n    }\r\n\r\n    searchGifs(searchText: string) {\r\n        let url: string = `http://api.giphy.com/v1/gifs/search?q=${searchText}&api_key=dc6zaTOxFJmzC&limit=10&offset=0`;\r\n        return this.loadData(url);\r\n    }\r\n\r\n    private handleResponse(response: any) {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        else {\r\n            console.log(response);\r\n            return response.json()\r\n                .then(jsonResponse => {\r\n                    return new Promise((resolve, reject) => {\r\n                        if (jsonResponse) {\r\n                            resolve(jsonResponse);\r\n                        }\r\n                        else {\r\n                            reject(`${response.status} ${response.statusText}`);\r\n                        }\r\n                    });\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { bindable } from 'aurelia-framework';\r\nimport { Image } from '../models/image';\r\n\r\nexport class Data {\r\n\r\n    private searchText: string;\r\n    private imageUrl: string;\r\n\r\n    @bindable images: Image[] = [];\r\n\r\n    @bindable search;\r\n\r\n    private notifySearch() {\r\n        this.search({ data: this.searchText });\r\n    }\r\n\r\n}","import { inject, bindable, NewInstance, customElement } from 'aurelia-framework';\r\nimport { ValidationRules, ValidationController } from 'aurelia-validation';\r\n\r\n@inject(NewInstance.of(ValidationController))\r\n@customElement('d-form')\r\nexport class Form {\r\n\r\n    @bindable userName: string;\r\n    @bindable password: string;\r\n    @bindable address: string;\r\n    @bindable state: string;\r\n    @bindable isCitizen: boolean;\r\n\r\n    private states: string[] = ['ACT', 'NSW', 'NT', 'QLD', 'SA', 'VIC', 'TAS', 'WA'];\r\n\r\n    private loginErrorMessage: string;\r\n\r\n    constructor(private validationController: ValidationController) {\r\n        ValidationRules\r\n            .ensure((m: Form) => m.userName).displayName(\"User name\").required()\r\n            .ensure((m: Form) => m.password).displayName(\"Password\").required()\r\n            .ensure((m: Form) => m.address).displayName(\"Address\").required()\r\n            .on(this);\r\n    }\r\n\r\n    submit() {\r\n        this.validationController\r\n            .validate()\r\n            .then(result => {\r\n                if (result.valid) {\r\n                    this.loginErrorMessage = null;\r\n                    alert('Validation successful. Submitting...');\r\n                }\r\n                else {\r\n                    this.loginErrorMessage = 'Validaton error(s):';\r\n                    for (let error of this.validationController.errors) {\r\n                        this.loginErrorMessage += error.message + ' ';\r\n                    }\r\n                }\r\n            })\r\n    }\r\n}","import { customElement, inject } from 'aurelia-framework';\r\n\r\n\r\n@customElement('say-hello') \r\nexport class Hello { \r\n\r\n  firstName: string = 'John'; \r\n  lastName: string = 'Doe'; \r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  sayHello() { \r\n    alert(`Hello ${this.firstName} ${this.lastName}. Nice to meet you.`); \r\n  }\r\n}","import { Aurelia, bindable, inject, customElement } from 'aurelia-framework';\r\n\r\n@customElement('iv-spinner')\nexport class Spinner {  \r\n    private currentTimeout: any;\r\n    private isDelayedRunning: boolean = false;\r\n    private _isRunning: boolean = false;\r\n\r\n    @bindable delay: number = 300;\r\n    @bindable spinnerType: string = 'spinner-circles';\r\n    @bindable isRunning: boolean;\r\n\r\n    private cancelTimeout(): void {\r\n        clearTimeout(this.currentTimeout);\r\n        this.currentTimeout = undefined;\r\n    }\r\n\r\n    detached(argument) {\r\n        this.cancelTimeout();\r\n    }\r\n\r\n    attached(argument) {\r\n        console.log(this.isRunning);\r\n    }\r\n}","import { bindable } from 'aurelia-framework';\r\n\r\nexport class FormView {\r\n}","export class HelloView {\r\n  message = 'Hello World!';\r\n}\r\n","export class HomeView {\r\n\r\n}","import { inject } from 'aurelia-framework';\r\nimport { DataService } from '../../services/data-service';\r\nimport { Image } from '../../models/image';\r\n\r\n@inject(DataService)\r\nexport class DataView {\r\n\r\n    images: Image[] = [];\r\n\r\n    constructor(private dataSvc: DataService) {\r\n\r\n    }\r\n\r\n    private searchGifs(event) {\r\n        let data: string = event.data;\r\n        this.dataSvc.searchGifs(data).then(output => {\r\n            this.images = [];\r\n            for(let d of output.data) {\r\n                this.images.push({ caption: d.caption, url: d.images.fixed_width.url });\r\n            }\r\n        });\r\n    }\r\n\r\n}"],"sourceRoot":"../src"}