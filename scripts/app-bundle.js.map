{"version":3,"sources":["app.ts","environment.ts","main.ts","data/data.ts","services/data-service.ts","hello/hello.ts","resources/index.ts","views/data-view/data-view.ts","views/hello-view/hello-view.ts","views/home-view/home-view.ts","models/image.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration, Router} from 'aurelia-router';\n\nexport class App { \n\n  message = 'Aurelia demo';\n\n  private router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router): void { \n    config.title = 'Aurelia'; \n    config.map([ \n      { route: ['', 'home'], name: 'home', moduleId: 'views/home-view/home-view', title: 'Home', nav: true }, \n      { route: 'hello', name: 'hello', moduleId: 'views/hello-view/hello-view', nav: true, title: 'Hello' }, \n      { route: 'data', name: 'data', moduleId: 'views/data-view/data-view', nav: true, title: 'Data' }, \n      //{ route: 'users/:id/detail', name: 'userDetail', moduleId: 'users/detail' }, \n    ]); \n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-router');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { bindable } from 'aurelia-framework';\r\nimport { Image } from '../models/image';\r\n\r\nexport class Data {\r\n\r\n    private searchText: string;\r\n    private imageUrl: string;\r\n\r\n    @bindable images: Image[] = [];\r\n\r\n    @bindable search;\r\n\r\n    private notifySearch() {\r\n        this.search({ data: this.searchText });\r\n    }\r\n\r\n}","// import 'fetch';\r\nimport { inject } from 'aurelia-framework';\r\nimport { HttpClient, json, RequestInit } from 'aurelia-fetch-client';\r\n\r\nimport environment from '../environment';\r\n\r\n@inject(HttpClient)\r\nexport class DataService {\r\n\r\n\r\n    constructor(private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    loadData(url: string) {\r\n        let headers: Headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.httpClient.fetch(url, {\r\n            credentials: 'omit', // include\r\n            headers: headers\r\n        })\r\n            .then(response => {\r\n                return this.handleResponse(response);\r\n            });\r\n    }\r\n\r\n    postData(url: string, data: any) {\r\n        let headers: Headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.httpClient.fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            credentials: 'include',\r\n            headers: headers\r\n        })\r\n            .then(response => {\r\n                return this.handleResponse(response);\r\n            });\r\n    }\r\n\r\n    searchGifs(searchText: string) {\r\n        let url: string = `http://api.giphy.com/v1/gifs/search?q=${searchText}&api_key=dc6zaTOxFJmzC&limit=1&offset=0`;\r\n        return this.loadData(url);\r\n    }\r\n\r\n    private handleResponse(response: any) {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        else {\r\n            console.log(response);\r\n            return response.json()\r\n                .then(jsonResponse => {\r\n                    return new Promise((resolve, reject) => {\r\n                        if (jsonResponse) {\r\n                            resolve(jsonResponse);\r\n                        }\r\n                        else {\r\n                            reject(`${response.status} ${response.statusText}`);\r\n                        }\r\n                    });\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { customElement, inject } from 'aurelia-framework';\r\n\r\n\r\n@customElement('say-hello') \r\nexport class Hello { \r\n\r\n  firstName: string = 'John'; \r\n  lastName: string = 'Doe'; \r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  sayHello() { \r\n    alert(`Hello ${this.firstName} ${this.lastName}. Nice to meet you.`); \r\n  }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport { DataService } from '../../services/data-service';\r\nimport { Image } from '../../models/image';\r\n\r\n@inject(DataService)\r\nexport class DataView {\r\n\r\n    images: Image[] = [];\r\n\r\n    constructor(private dataSvc: DataService) {\r\n\r\n    }\r\n\r\n    private searchGifs(event) {\r\n        let data: string = event.data;\r\n        this.dataSvc.searchGifs(data).then(output => {\r\n            this.images = [];\r\n            for(let d of output.data) {\r\n                this.images.push({ caption: d.caption, url: d.images.original.url });\r\n            }\r\n        });\r\n    }\r\n\r\n}","export class HelloView {\r\n  message = 'Hello World!';\r\n}\r\n","export class HomeView {\r\n\r\n}","export class Image {\r\n    caption: string;\r\n    url: string;\r\n}"],"sourceRoot":"../src"}